{"version":3,"sources":["logo.svg","Profile.js","Calculator.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Profile","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toast","notify","duration","_this","react_default","a","createElement","onClick","klik","src","Component","Calculator","state","angka1","angka2","operation","event","setState","defineProperty","target","name","value","parseInt","className","item","color","type","placeholder","onChange","changeHandler","bind","hitung","App","img","menu","src_Calculator","src_Profile","width","_this2","id","items","map","index","style","concat","clicked","key","info","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","catch","error","ReactDOM","render","src_App_0","document","getElementById","URL","process","href","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.cddbf8a2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport toast from 'toasted-notes';\r\nimport 'toasted-notes/src/styles.css';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n  \r\n  klik(){\r\n    toast.notify('Hello world', {\r\n      duration: 2000\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <button onClick={() => this.klik()}>alert</button><br/><br/>\r\n        <img src=\"apel.jpg\"/>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n","import React, { Component } from 'react';\r\n\r\nclass Calculator extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n        angka1: 0,\r\n        angka2: 0,\r\n        operation: 'plus',\r\n    };\r\n  }\r\n\r\n  changeHandler(event) {\r\n    // this.setState({\r\n    //   angka1: event.target.value\r\n    // });\r\n    this.setState({\r\n      [event.target.name]: event.target.value \r\n    });\r\n  }\r\n  hitung(){\r\n    switch(this.state.operation){\r\n      case 'plus': return parseInt(this.state.angka1) + parseInt(this.state.angka2);\r\n      case 'minus': return parseInt(this.state.angka1) - parseInt(this.state.angka2)\r\n      case 'pow': return parseInt(this.state.angka1) * parseInt(this.state.angka2)\r\n      case 'div': return parseInt(this.state.angka1) / parseInt(this.state.angka2)\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n        <div>\r\n            <span className={\"selected \"+this.props.item.color}>{this.props.item.name}  </span><br/><br/>\r\n            <input type=\"number\" name=\"angka1\" placeholder=\"angka 1\"  value={this.state.angka1} onChange={this.changeHandler.bind(this)}/>\r\n            <select name=\"operation\" onChange={this.changeHandler.bind(this)}>\r\n                <option value=\"plus\">+</option>\r\n                <option value=\"minus\">-</option>\r\n                <option value=\"pow\">x</option>\r\n                <option value=\"div\">:</option>\r\n            </select>\r\n            <input type=\"number\" name=\"angka2\" placeholder=\"angka 2\"  value={this.state.angka2} onChange={this.changeHandler.bind(this)}/>=\r\n            <span> {this.hitung()}</span>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Calculator;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Pr from './Profile.js';\r\nimport Calc from './Calculator.js';\r\nimport toast from 'toasted-notes';\r\nimport 'toasted-notes/src/styles.css';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      name: 'Apple',\r\n      color: 'merah',\r\n      img: 'apel.jpg'\r\n    };\r\n\r\n    toast.notify('Hello world!');\r\n  }\r\n\r\n  clicked(menu) {\r\n    // untuk memperbarui state sesuai dengan menu yg dipilih\r\n    this.setState({\r\n      name: menu.name,\r\n      color: menu.color,\r\n      img: menu.img,\r\n    });\r\n  }\r\n  info(name){\r\n    if(name == 'Calculator'){\r\n      //display calc\r\n      return (\r\n        <Calc item={this.state}/>\r\n      );\r\n    }else if(name == 'Profile'){\r\n      //display menu profile\r\n      return <Pr/>;\r\n    }else{\r\n      //display default\r\n      return (\r\n        <div>\r\n          ini adalah <span className={\"selected \"+this.state.color}>{this.state.name}</span><br/><br/>\r\n                  \r\n          <img src={this.state.img} width=\"200\"></img>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  // menusaya() {\r\n  //   var gambar;\r\n  //   if(this.state.color.toLowerCase() === 'merah'){\r\n  //     gambar = \"apel\";\r\n  //   }else if(this.state.color.toLowerCase() === 'kuning'){\r\n  //     gambar = \"nanas\";\r\n  //   }else if(this.state.color.toLowerCase() === 'hijau'){\r\n  //     gambar = \"alpukat\";\r\n  //   }else if(this.state.color.toLowerCase() === 'biru'){\r\n  //     gambar = \"berry\";\r\n  //   }\r\n\r\n  //   return <img src={gambar+\".jpg\"} width=\"200\"></img>\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div id=\"app\">\r\n          {/* map akan loop sebanyak menu yg didefinisikan */}\r\n          {/* kemudian mengembalikan elemen <a/> */}\r\n          <nav className=\"nav\">{ this.props.items.map((menu, index) => {\r\n            var style = 'menu';\r\n\r\n            if (this.state.color === menu.color) {\r\n              style = `${style} is-active`;\r\n            }\r\n\r\n            return <a\r\n                    className={style+\" \"+menu.color}\r\n\r\n                    // bind untuk membuat 'menu' bisa dikirim ke fungsi 'clicked'\r\n                    onClick={this.clicked.bind(this, menu)}\r\n                    key={index}\r\n                  >\r\n                    {menu.name}\r\n                  </a>;\r\n          }) }\r\n          </nav>\r\n\r\n          <div className=\"info\">\r\n            {this.info(this.state.name)}\r\n          </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Custom.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nconst items = [\r\n    {\r\n        name : 'Apple',\r\n        color : 'merah',\r\n        img   : 'apel.jpg',\r\n    },\r\n    {\r\n        name : 'Pineapple',\r\n        color : 'kuning',\r\n        img   : 'nanas.jpg',\r\n    },\r\n    {\r\n        name : 'Avocado',\r\n        color : 'hijau',\r\n        img   : 'alpukat.jpg',\r\n    },\r\n    {\r\n        name : 'Berry',\r\n        color : 'biru',\r\n        img   : 'berry.jpg',\r\n    },\r\n    {\r\n        name : 'Calculator',\r\n        color : 'gray',\r\n        img   : '',\r\n    },\r\n    {\r\n        name : 'Profile',\r\n        color : 'blue',\r\n        img   : '',\r\n    },\r\n];\r\n\r\nReactDOM.render(<App items={items}/>, document.getElementById('root'));\r\n\r\nserviceWorker.register();"],"sourceRoot":""}